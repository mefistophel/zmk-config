/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&mo 3>, <&to 3>;
        };

        BEH_TO_RU: BEH_TO_RU {
            compatible = "zmk,behavior-hold-tap";
            label = "BEH_TO_RU";
            bindings = <&MACRO_ALT_SHIFT>, <&MACRO_TO_RU>;

            #binding-cells = <2>;
            tapping-term-ms = <130>;
            flavor = "tap-preferred";
        };

        BEH_TO_EN: BEH_TO_EN {
            compatible = "zmk,behavior-hold-tap";
            label = "BEH_TO_EN";
            bindings = <&MACRO_ALT_SHIFT>, <&MACRO_TO_EN>;

            #binding-cells = <2>;
            tapping-term-ms = <130>;
            flavor = "tap-preferred";
        };

        BEH_WIN_R_D: BEH_WIN_R_D {
            compatible = "zmk,behavior-hold-tap";
            label = "BEH_WIN_R_D";
            bindings = <&MACRO_WIN_D>, <&MACRO_WIN_R>;

            #binding-cells = <2>;
            tapping-term-ms = <130>;
            flavor = "tap-preferred";
        };

        BEH_TOG_LAYER_KEY: BEH_TOG_LAYER_KEY {
            compatible = "zmk,behavior-hold-tap";
            label = "BEH_TOG_LAYER_KEY";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
        };

        BEH_HOLD_TAP: BEH_HOLD_TAP {
            compatible = "zmk,behavior-hold-tap";
            label = "BEH_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };

        MACRO_CTRL_C: MACRO_CTRL_C {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRL_C";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_CTRL_V: MACRO_CTRL_V {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRL_V";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_CTRL_Z: MACRO_CTRL_Z {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LCTRL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRL_Z";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_CTRL_X: MACRO_CTRL_X {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRL_X";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_CTRL_A: MACRO_CTRL_A {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LCTRL>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRL_A";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_CTRL_F: MACRO_CTRL_F {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LCTRL>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "MACRO_CTRL_F";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_WIN_D: MACRO_CTRL_WIND {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LEFT_WIN>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LEFT_WIN>;

            label = "MACRO_CTRL_WIND";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_WIN_R: MACRO_WIN_R {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LEFT_WIN>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LEFT_WIN>;

            label = "MACRO_WIN_R";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_ALT_TAB: MACRO_ALT_TAB {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LEFT_ALT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MACRO_ALT_TAB";
            wait-ms = <80>;
            tap-ms = <40>;
        };

        MACRO_ALT_SHIFT: MACRO_ALT_SIHFT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(LALT)>;

            label = "MACRO_ALT_SIHFT";
            wait-ms = <70>;
            tap-ms = <70>;
        };

        MACRO_TO_RU: MACRO_TO_RU {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&to 1>, <&macro_tap>, <&kp LA(LSHFT)>;

            label = "MACRO_TO_RU";
            wait-ms = <20>;
            tap-ms = <10>;
        };

        MACRO_TO_EN: MACRO_TO_EN {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&to 0>, <&macro_tap>, <&kp LS(LALT)>;

            label = "MACRO_TO_EN";
            wait-ms = <20>;
            tap-ms = <10>;
        };

        MACRO_TO_LOWER: MACRO_TO_LOWER {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&to 2>;

            label = "MACRO_TO_LOWER";
            wait-ms = <20>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        EN {
            bindings = <
&trans          &trans         &trans                    &trans                 &trans                                                                                                                              &kp F5            &kp F12            &kp F10               &kp F1                 &lt 2 F2
&kp GRAVE       &kp NUMBER_1   &kp NUMBER_2              &kp NUMBER_3           &kp NUMBER_4           &kp N5                                                                                         &kp NUMBER_6  &kp N7            &kp N8             &kp N9                &kp N0                 &kp TILDE
&kp TAB         &kp SEMICOLON  &kp W                     &kp O                  &kp X                  &kp SQT                                                                                        &kp J         &kp K             &kp R              &kp C                 &kp V                  &kp EQUAL
&MACRO_ALT_TAB  &kp I          &BEH_HOLD_TAP LEFT_ALT S  &BEH_HOLD_TAP LSHFT E  &BEH_HOLD_TAP LCTRL A  &kp U                                                                                          &kp P         &kp H             &kp T              &kp N                 &kp L                  &kp MINUS
&kp TAB         &kp Z          &kp Q                     &kp COMMA              &kp Y                  &kp PERIOD  &kp LEFT_WIN   &BEH_WIN_R_D 0 0  &mt ESCAPE ENTER    &trans     &trans     &trans  &kp B         &kp D             &kp G              &kp M                 &kp F                  &kp SLASH
&mo 3           &trans         &kp LESS_THAN             &kp GREATER_THAN       &BEH_TO_RU 0 0                     &kp BACKSPACE  &mt LSHFT DELETE  &mo 2               &kp ENTER  &kp SPACE  &trans                &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH
            >;
        };

        RU {
            bindings = <
&trans   &trans  &trans                &trans                 &trans                                                                                         &trans  &trans  &trans  &trans               &mo 3
&trans   &trans  &trans                &trans                 &trans                 &trans                                                       &trans     &trans  &trans  &trans  &trans               &trans
&kp SQT  &kp A   &kp S                 &kp J                  &kp Q                  &kp W                                                        &mt O I    &kp R   &kp H   &kp G   &kp P                &trans
&trans   &kp B   &BEH_HOLD_TAP LALT C  &BEH_HOLD_TAP LSHFT T  &BEH_HOLD_TAP LCTRL F  &kp E                                                        &kp X      &kp D   &kp N   &kp Y   &kp K                &trans
&trans   &kp Z   &kp LEFT_BRACKET      &kp SEMICOLON          &kp PERIOD             &kp SLASH  &trans  &trans  &trans    &trans  &trans  &trans  &kp COMMA  &kp L   &kp U   &kp V   &mt RIGHT_BRACKET M  &kp QMARK
&mo 3    &trans  &trans                &trans                 &BEH_TO_EN 0 0                    &trans  &trans  &trans    &trans  &trans  &trans             &trans  &trans  &trans  &trans               &trans
            >;
        };

        LOWER {
            bindings = <
&trans  &trans         &kp C_PREV     &kp C_NEXT     &kp C_PP                                                                                   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none            &kp PAUSE_BREAK
&trans  &trans         &trans         &trans         &trans         &trans                                                           &kp LPAR   &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp PSCRN
&trans  &trans         &trans         &kp UP         &trans         &trans                                                           &kp RPAR   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp SLCK
&trans  &MACRO_CTRL_A  &kp LEFT       &kp DOWN       &kp RIGHT      &MACRO_CTRL_F                                                    &kp PRCNT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &none
&trans  &MACRO_CTRL_Z  &MACRO_CTRL_X  &MACRO_CTRL_C  &MACRO_CTRL_V  &trans         &trans  &trans  &to 4     &trans  &trans  &trans  &kp COMMA  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans  &trans         &trans         &kp PG_UP      &kp PAGE_DOWN                 &trans  &trans  &trans    &trans  &trans  &trans             &kp KP_N0   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans
            >;
        };

        MAGIC {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &none
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none           &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&to 0        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };

        GAMING {
            bindings = <
&kp N0   &kp NUMBER_6  &kp N7  &kp N8        &kp N9                                                                                    &kp F1  &kp F2    &kp F3  &kp F4   &kp F5
&kp END  &kp NUMBER_1  &kp N2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                                             &kp F6   &kp F7  &kp F8    &kp F9  &kp F10  &kp F11
&kp TAB  &kp T         &kp Q   &kp W         &kp E         &kp R                                                              &kp F12  &none   &none     &none   &none    &none
&trans   &kp O         &kp A   &kp S         &kp D         &kp F                                                              &none    &none   &none     &none   &none    &none
&kp DEL  &kp L         &kp Z   &kp X         &kp C         &kp V   &kp N  &kp ENTER  &to 0    &kp LGUI  &kp RCTRL  &kp RSHFT  &none    &none   &none     &none   &none    &kp PG_UP
&kp ESC  &kp G         &kp B   &kp I         &kp M                 &kp K  &kp SPACE  &mo 5    &kp RALT  &kp RET    &kp SPACE           &kp UP  &kp DOWN  &none   &none    &kp PG_DN
            >;
        };

        GAMING_LOWER {
            bindings = <
&trans  &trans  &trans          &trans          &trans                                                                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans     &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp Y           &kp UP_ARROW    &kp U      &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp H           &kp J           &kp P      &trans  &trans  &trans  &to 0     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans             &trans  &trans  &trans    &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        DEFAULT {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1     &kp F2    &kp F3   &kp F4    &kp F5                                                                                        &kp F6  &kp F7     &kp F8    &kp F9    &kp F10
&kp EQUAL  &kp N1    &kp N2   &kp N3    &kp N4     &kp N5                                                                     &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q     &kp W    &kp E     &kp R      &kp T                                                                      &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A     &kp S    &kp D     &kp F      &kp G                                                                      &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp GRAVE  &kp Z     &kp X    &kp C     &kp V      &kp B   &kp LSHFT  &kp LCTRL  &layer_td    &kp LGUI  &kp RCTRL  &kp RSHFT  &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp PG_UP
&mo 3      &kp HOME  &kp END  &kp LEFT  &kp RIGHT          &kp BSPC   &kp DEL    &kp LALT     &kp RALT  &kp RET    &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };
    };
};
