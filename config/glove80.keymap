/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 4>, <&to 4>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        EN {
            bindings = <
&trans     &trans         &trans                &trans                 &trans                                                                                          &kp F11  &kp F12           &kp F10            &kp F1  &kp F2
&kp GRAVE  &kp NUMBER_1   &kp NUMBER_2          &kp NUMBER_3           &kp NUMBER_4  &kp N5                                                              &kp NUMBER_6  &kp N7   &kp N8            &kp N9             &kp N0  &kp EQUAL
&trans     &kp SEMICOLON  &kp W                 &kp O                  &kp X         &kp SQT                                                             &kp J         &kp K    &kp R             &kp C              &kp V   &kp MINUS
&trans     &kp I          &kp S                 &kp E                  &kp A         &kp U                                                               &kp P         &kp H    &kp T             &kp N              &kp L   &kp SLASH
&trans     &kp Z          &kp Q                 &kp COMMA              &kp Y         &kp PERIOD  &trans  &trans  &trans    &trans     &trans     &trans  &kp B         &kp D    &kp G             &kp M              &kp F   &kp NON_US_BACKSLASH
&mo 4      &trans         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                    &trans  &trans  &tog 3    &kp ENTER  &kp SPACE  &trans                &trans   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans  &tog 4
            >;
        };

        RU {
            bindings = <
&trans   &trans  &trans            &trans         &trans                                                                              &trans  &trans  &trans  &trans               &trans
&trans   &trans  &trans            &trans         &trans      &trans                                                       &trans     &trans  &trans  &trans  &trans               &trans
&kp SQT  &kp A   &kp S             &kp J          &kp Q       &kp W                                                        &mt O I    &kp R   &kp H   &kp G   &kp P                &trans
&trans   &kp B   &kp C             &kp T          &kp F       &kp E                                                        &kp X      &kp D   &kp N   &kp Y   &kp K                &trans
&trans   &kp Z   &kp LEFT_BRACKET  &kp SEMICOLON  &kp PERIOD  &kp SLASH  &trans  &trans  &trans    &trans  &trans  &trans  &kp COMMA  &kp L   &kp U   &kp V   &mt RIGHT_BRACKET M  &trans
&trans   &trans  &trans            &trans         &trans                 &trans  &trans  &trans    &trans  &trans  &trans             &trans  &trans  &trans  &trans               &trans
            >;
        };

        DEFAULT {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1     &kp F2    &kp F3   &kp F4    &kp F5                                                                                        &kp F6  &kp F7     &kp F8    &kp F9    &kp F10
&kp EQUAL  &kp N1    &kp N2   &kp N3    &kp N4     &kp N5                                                                     &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q     &kp W    &kp E     &kp R      &kp T                                                                      &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A     &kp S    &kp D     &kp F      &kp G                                                                      &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp GRAVE  &kp Z     &kp X    &kp C     &kp V      &kp B   &kp LSHFT  &kp LCTRL  &layer_td    &kp LGUI  &kp RCTRL  &kp RSHFT  &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp PG_UP
&mo 4      &kp HOME  &kp END  &kp LEFT  &kp RIGHT          &kp BSPC   &kp DEL    &kp LALT     &kp RALT  &kp RET    &kp SPACE          &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &kp PG_DN
            >;
        };

        LOWER {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                           &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none            &kp PAUSE_BREAK
&trans        &none         &none       &none       &none      &kp HOME                                                     &kp LPAR   &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp PSCRN
&trans        &none         &none       &kp UP      &none      &kp END                                                      &kp RPAR   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp SLCK
&trans        &none         &kp LEFT    &kp DOWN    &kp RIGHT  &kp PG_UP                                                    &kp PRCNT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &none
&trans        &kp K_CMENU   &none       &kp F11     &kp F12    &kp PG_DN  &trans  &trans  &to 3     &trans  &trans  &trans  &kp COMMA  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans        &kp CAPS      &kp INS     &kp F11     &kp F12               &trans  &trans  &trans    &trans  &trans  &trans             &kp KP_N0   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans
            >;
        };

        MAGIC {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &none
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none           &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        GAMING {
            bindings = <
&kp N0   &kp NUMBER_6    &kp N7  &kp N8        &kp N9                                                                                            &kp F1  &kp F2    &kp F3  &kp F4   &kp F5
&kp END  &kp NUMBER_4    &kp N2  &kp NUMBER_1  &kp NUMBER_3  &kp N5                                                                     &kp F6   &kp F7  &kp F8    &kp F9  &kp F10  &kp F11
&kp TAB  &kp T           &kp Q   &kp W         &kp E         &kp R                                                                      &kp F12  &none   &none     &none   &none    &none
&trans   &kp LEFT_SHIFT  &kp A   &kp S         &kp D         &kp F                                                                      &none    &none   &none     &none   &none    &none
&kp DEL  &kp LCTRL       &kp Z   &kp X         &kp C         &kp V   &kp LALT   &kp HOME   &layer_td    &kp LGUI  &kp RCTRL  &kp RSHFT  &none    &none   &none     &none   &none    &kp PG_UP
&kp ESC  &kp G           &kp B   &kp I         &kp M                 &kp ENTER  &kp SPACE  &tog 6       &kp RALT  &kp RET    &kp SPACE           &kp UP  &kp DOWN  &none   &none    &kp PG_DN
            >;
        };

        GAMING_LOWER {
            bindings = <
&trans  &trans  &trans          &trans          &trans                                                                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans     &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N   &kp Y           &kp UP_ARROW    &kp U      &kp O                                                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp K   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp L                                                     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp H           &kp J           &kp P      &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans             &trans  &trans  &trans    &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
